@page "/recipes/create"
@inject IIngredientRepository ingredientRepository
@inject IRecipeRepository recipeRepository
@inject NavigationManager navManager

<div class="container col-12">
    <EditForm Model="Recipe" OnValidSubmit="SaveRecipe">
        <button class="btn btn-primary">Save recipe</button>
        <div class="col-4">
            <div class="form-control">
                <InputText @bind-Value="Recipe.Name" />
            </div>
        </div>
    </EditForm>
</div>
<div class="row">
    <div class="col-6">
        <TableTemplate Items="ListOfIngredients">
            <TableHeader>
                <th>Name</th>
                <th>Kcal</th>
                <th>Action</th>
            </TableHeader>
            <RowTemplate Context="ingredient">
                <td>@ingredient.Name</td>
                <td>@ingredient.Kcal</td>
                <td>
                    <button class="btn btn-primary" @onclick="@(()=>SetTheAmount(ingredient))">Add</button>
                </td>
            </RowTemplate>
        </TableTemplate>
    </div>
    <div class="col-6">
        List of ingredients
        <br />
        @if (ListOfIngredientAmounts.Any())
        {
            <TableTemplate Items="ListOfIngredientAmounts">
                <TableHeader>
                    <th>Name</th>
                    <th>Amount</th>
                    <th>Action</th>
                </TableHeader>
                <RowTemplate Context="ingredient">
                    <td>@ingredient.Ingredient.Name</td>
                    <td>@ingredient.Amount</td>
                    <td>
                        <button class="btn btn-primary" @onclick="@(()=>DeleteIngredientAmount(ingredient))">Delete</button>
                    </td>
                </RowTemplate>
            </TableTemplate>
        }
    </div>
</div>

@if (IngredientAmount.Ingredient != null)
{
    <p>Ingredient Id: @IngredientAmount.IngredientId | Name: @IngredientAmount.Ingredient.Name | Amount: @IngredientAmount.Amount</p>
    <EditForm Model="IngredientAmount" OnValidSubmit="AddIngredientToIngredientAmountList">
        <div class="form-group">
            Value
            <InputNumber @bind-Value="IngredientAmount.Amount" />
        </div>
        <button class="btn btn-primary" type="submit">Add to list</button>
    </EditForm>
}


@code{
    public Recipe Recipe { get; set; } = new Recipe();

    public List<Ingredient> ListOfIngredients { get; set; } = new List<Ingredient>();

    public IngredientRecipe IngredientAmount { get; set; } = new IngredientRecipe();

    public List<IngredientRecipe> ListOfIngredientAmounts { get; set; } = new List<IngredientRecipe>();


    protected override async Task OnInitializedAsync()
    {
        ListOfIngredients = await ingredientRepository.GetListOfIngredients();
    }

    private void SetTheAmount(Ingredient ingredient)
    {
        IngredientAmount = new IngredientRecipe();
        IngredientAmount.IngredientId = ingredient.Id;
        IngredientAmount.Recipe = Recipe;
        IngredientAmount.RecipeId = Recipe.Id;
        IngredientAmount.Ingredient = ingredient;
    }

    private void DeleteIngredientAmount(IngredientRecipe ingredientAmount)
    {

    }

    private void AddIngredientToIngredientAmountList()
    {
        ListOfIngredientAmounts.Add(IngredientAmount);
        IngredientAmount = new IngredientRecipe();
    }

    private async void SaveRecipe()
    {
        if (ListOfIngredientAmounts.Any())
        {
            Recipe.ListOfIngredients = ListOfIngredientAmounts;

            await recipeRepository.CreateRecipe(Recipe);

            ListOfIngredientAmounts = new List<IngredientRecipe>();
            Recipe = new Recipe();
            navManager.NavigateTo("/recipes");
        }
    }

}